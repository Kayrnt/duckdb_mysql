name: MacOS
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  macos:
    name: MacOS Release (${{ matrix.osx_build_arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ '<submodule_version>' ]
        vcpkg_version: [ '2023.04.15' ]
        vcpkg_triplet: [ 'x64-osx', 'arm64-osx' ]
        include:
          - vcpkg_triplet: 'x64-osx'
            osx_build_arch: 'x86_64'
            duckdb_arch: 'osx_amd64'
          - vcpkg_triplet: 'arm64-osx'
            osx_build_arch: 'arm64'
            duckdb_arch: 'osx_arm64'

    env:
      VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_triplet }}
      OSX_BUILD_ARCH: ${{ matrix.osx_build_arch }}
      GEN: Ninja
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Install
        run: |
          brew install ninja
          brew install autoconf
          brew install automake
          brew install autoconf-archive
          brew install libevent
          brew install jemalloc
          brew install mysql
          touch build.ninja
          ninja -v
          /usr/local/bin/ninja -v

      - name: Setup Ccache
        uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ github.job }}-${{ matrix.duckdb_version }}
          save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb' }}

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 8eb57355a4ffb410a2e94c07b4dca2dffbee8e50

      - name: Patch vcpkg
        shell: bash
        run: |
          export VCPKG_BASE_PATH=`dirname ${VCPKG_TOOLCHAIN_PATH}`/../..
          export PATCH_PATH=`pwd`/.github/patches/vcpkg_macos.patch
          cp .github/patches/mysql_macos.patch $VCPKG_BASE_PATH/ports/libmysql/mysql_patch.patch
          (cd $VCPKG_BASE_PATH && git apply $PATCH_PATH)

      - name: Build uca9dump
        shell: bash
        run: |
          # because we are cross compiling we need to build this separately for the CURRENT machine
          wget https://github.com/mysql/mysql-server/archive/mysql-8.0.32.tar.gz
          tar xvf mysql-8.0.32.tar.gz
          cd mysql-server-mysql-8.0.32
          wget https://raw.githubusercontent.com/jacob5412/MySQL-Medium/main/my_config.h
          print '#include "print_version.h"\nextern "C" {\nvoid print_version() {}\n}' > print_version.c
          clang++ -std=c++14 -Iinclude -I. strings/uca9-dump.cc -o uca9dump
          clang++ -std=c++14 `mysql_config --cflags` -Iinclude -I. -I$HOMEBREW_PREFIX/include/ utilities/comp_client_err.cc print_version.c -o comp_client_err `mysql_config --libs`
          mv uca9dump /usr/local/bin/
          uca9dump
          cd ..

      - name: Build extension
        shell: bash
        run: |
          # needed for MySQL cross compilation - see https://mariadb.com/kb/en/cross-compiling-mariadb/
          echo 'SET(STACK_DIRECTION -1)' >> ${VCPKG_TOOLCHAIN_PATH}
          echo 'SET(HAVE_IB_GCC_ATOMIC_BUILTINS 0)' >> ${VCPKG_TOOLCHAIN_PATH}
          make release

      - name: Test Extension
        if: ${{ matrix.osx_build_arch == 'x86_64'}}
        shell: bash
        run: |
          ./build/release/test/unittest "*test/sql/failed_to_connect.test"

      - uses: actions/upload-artifact@v2
        with:
          name: osx-${{ matrix.osx_build_arch }}-extension
          path: |
            build/release/extension/mysql_scanner/mysql_scanner.duckdb_extension

      - name: Log Errors
        if: always()
        shell: bash
        run: |
          cat /Users/runner/work/mysql_scanner/mysql_scanner/vcpkg/buildtrees/libmysql/install-arm64-osx-dbg-out.log