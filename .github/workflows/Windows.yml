name: Windows
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  windows:
    name: Release
    runs-on: windows-latest
    strategy:
      matrix:
        # Add commits/tags to build against other DuckDB versions
        duckdb_version: [ '<submodule_version>' ]
        vcpkg_version: [ '2023.10.19' ]
        vcpkg_triplet: ['x64-windows-static-md']
    env:
      VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_triplet }}
      GEN: Ninja
      VCPKG_ROOT: ${{ github.workspace }}\vcpkg
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 8eb57355a4ffb410a2e94c07b4dca2dffbee8e50

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Checkout DuckDB to version
        # Add commits/tags to build against other DuckDB versions
        if: ${{ matrix.duckdb_version != '<submodule_version>'}}
        run: |
          cd duckdb
          git checkout ${{ matrix.duckdb_version }}

      - name: Build extension
        run: |
          make release

      - name: Test Extension
        shell: bash
        run: |
          ./build/release/test/Release/unittest "*test/sql/failed_to_connect.test"

      - uses: actions/upload-artifact@v2
        with:
          name: windows-extension
          path: |
            build/release/extension/mysql_scanner/mysql_scanner.duckdb_extension

      - name: Log Errors
        if: failure()
        shell: bash
        run: |
          cat D:/a/mysql_scanner/mysql_scanner/build/release/*.log
